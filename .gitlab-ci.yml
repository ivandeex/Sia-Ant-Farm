stages:
  - lint
  - test

variables:
  pkgs: >-
    ./ant
    ./antfarm
    ./upnprouter
    ./version-test
  ant_pkgs: >-
    ./ant
    ./fileutils
  antfarm_pkgs: >-
    ./antfarm
  binaries_builder_pkgs: >-
    ./binaries-builder
  version_test_pkgs: >-
    ./version-test

default: &default_params
  ## Run tests with most recent golang version to take advantage of any perf
  ## improvements.
  image: nebulouslabs/sia-ci
  before_script:
    - date
    - go version
    - mkdir -p .cache/gocache
    - export PATH=$PATH:$CI_PROJECT_DIR/.cache/bin/
    - export GOPATH="$CI_PROJECT_DIR/.cache"

## Default common test params for regular and nightly pipelines
.default_test_common: &default_test_common_params
  artifacts:
    name: "SiaTesting-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/SiaTesting
      - $CI_PROJECT_DIR/cover/cover.out
    when: always

  after_script:
    - cp -R /tmp/SiaTesting $CI_PROJECT_DIR/SiaTesting

## Define the default test parameters.
.default_test: &default_test_params
  ## Merge the contents of aliases
  <<: *default_params
  <<: *default_test_common_params
  stage: test
  needs: []

  ## disable default tests for scheduled pipelines (nightlies)
  except:
    - schedules

lint:
  stage: lint
  needs: []
  cache:
    key: lint-cache
    paths:
      - .cache
  script:
    ## This is the recommended way to install golang-ci lint.
    - export GOCACHE=$CI_PROJECT_DIR/.cache/gocache
    - make lint
    - make test
  except:
    - pipelines

build:
  stage: lint
  needs: []
  ## go 1.13 is the minimum accepted version for building Sia.
  image: nebulouslabs/sia-ci
  artifacts:
    name: "Binaries"
    paths:
      - $CI_PROJECT_DIR/artifacts
  script:
      - make dependencies && make install
      ## Publish artifacts
      - mkdir -p "$CI_PROJECT_DIR/artifacts"
      - cp "$GOPATH/bin/siad-dev" "$CI_PROJECT_DIR/artifacts/."
      - cp "$GOPATH/bin/sia-antfarm" "$CI_PROJECT_DIR/artifacts/."
  except:
    - pipelines

ant-tests:
  <<: *default_test_params
  cache:
    key: ant-tests-cache
    paths:
      - .cache
  script:
    - make test-long pkgs="$ant_pkgs"
  except:
    - pipelines


antfarm-tests:
  <<: *default_test_params
  cache:
    key: antfarm-tests-cache
    paths:
      - .cache
  script:
    - make test-long pkgs="$antfarm_pkgs"
  except:
    - pipelines

binaries-builder-tests:
  <<: *default_test_params
  cache:
    key: binaries-builder-tests-cache
    paths:
      - .cache
  script:
    - make test-long pkgs="$binaries_builder_pkgs"
  except:
    - pipelines

# Short version/upgrade tests triggered by Sia project merge to master
short-version-tests:
  <<: *default_test_params
  cache:
    key: version-tests-short-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run='TestUpgrades/(TestRenterUpgradesWithBaseLatestMaster|TestHostsUpgradesWithBaseLatestMaster)'
  only:
    refs:
      - pipelines
    variables: 
      - $PARENT_CI_PIPELINE_SOURCE != "schedule"

# Long version tests triggered by Sia project scheduled pipeline
long-version-tests:
  <<: *default_test_params
  cache:
    key: version-tests-long-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs"
  only:
    refs:
      - pipelines
    variables: 
      - $PARENT_CI_PIPELINE_SOURCE == "schedule"
