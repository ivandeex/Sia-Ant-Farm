stages:
  - lint
  - test

variables:
  pkgs: >-
    ./ant
    ./antfarm
    ./upnprouter
    ./version-test
  ant_pkgs: >-
    ./ant
    ./fileutils
  antfarm_pkgs: >-
    ./antfarm
  binaries_builder_pkgs: >-
    ./binaries-builder
  version_test_pkgs: >-
    ./version-test
  ANTFARM_JOBS_TO_RUN: "basic_jobs"

default: &default_params
  ## Run tests with most recent golang version to take advantage of any perf
  ## improvements.
  image: nebulouslabs/sia-ci
  before_script:
    - date
    - go version
    - mkdir -p .cache/gocache
    - export PATH=$PATH:$CI_PROJECT_DIR/.cache/bin/
    - export GOPATH="$CI_PROJECT_DIR/.cache"

## Default common test params for regular and nightly pipelines
.default_test_common: &default_test_common_params
  artifacts:
    name: "SiaTesting-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/SiaTesting
      - $CI_PROJECT_DIR/cover/cover.out
    when: always

  after_script:
    - cp -R /tmp/SiaTesting $CI_PROJECT_DIR/SiaTesting

## Define the default test parameters.
.default_test: &default_test_params
  ## Merge the contents of aliases
  <<: *default_params
  <<: *default_test_common_params
  stage: test
  needs: []

## Define lint, build, basic antfarm test jobs filter
.basic_jobs: &basic_jobs_filter
  ## Execute jobs only if specific jobs/tests are not set
  only:
    variables:
      - $ANTFARM_JOBS_TO_RUN == "basic_jobs"

## Define short upgrade test jobs filter
.short_upgrade_test_jobs: &short_upgrade_test_jobs_filter
  only:
    variables: 
      - $ANTFARM_JOBS_TO_RUN == "short_upgrade_tests" || $ANTFARM_JOBS_TO_RUN == "basic_jobs"

## Define long upgrade test jobs filter
.long_upgrade_test_jobs: &long_upgrade_test_jobs_filter
  only:
    variables: 
      - $ANTFARM_JOBS_TO_RUN == "long_upgrade_tests"

lint:
  <<: *basic_jobs_filter
  stage: lint
  needs: []
  cache:
    key: lint-cache
    paths:
      - .cache
  script:
    ## This is the recommended way to install golang-ci lint.
    - export GOCACHE=$CI_PROJECT_DIR/.cache/gocache
    - make lint
    - make test

build:
  <<: *basic_jobs_filter
  stage: lint
  needs: []
  ## go 1.13 is the minimum accepted version for building Sia.
  image: nebulouslabs/sia-ci
  artifacts:
    name: "Binaries"
    paths:
      - $CI_PROJECT_DIR/artifacts
  script:
      - make dependencies && make install-dev
      ## Publish artifacts
      - mkdir -p "$CI_PROJECT_DIR/artifacts"
      - cp "$GOPATH/bin/siad-dev" "$CI_PROJECT_DIR/artifacts/."
      - cp "$GOPATH/bin/sia-antfarm-dev" "$CI_PROJECT_DIR/artifacts/."

ant-tests:
  <<: *default_test_params
  <<: *basic_jobs_filter
  cache:
    key: ant-tests-cache
    paths:
      - .cache
  script:
    - make test-long pkgs="$ant_pkgs"

antfarm-tests:
  <<: *default_test_params
  <<: *basic_jobs_filter
  cache:
    key: antfarm-tests-cache
    paths:
      - .cache
  script:
    - make test-long pkgs="$antfarm_pkgs"

binaries-builder-tests:
  <<: *default_test_params
  <<: *basic_jobs_filter
  cache:
    key: binaries-builder-tests-cache
    paths:
      - .cache
  script:
    - make test-long pkgs="$binaries_builder_pkgs"

# Short hosts upgrade tests
short-hosts-upgrade-tests:
  <<: *default_test_params
  <<: *short_upgrade_test_jobs_filter
  cache:
    key: short-hosts-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/HostsUpgrades/WithBaseLatestRelease

# Short renter upgrade tests
short-renter-upgrade-tests:
  <<: *default_test_params
  <<: *short_upgrade_test_jobs_filter
  cache:
    key: short-renter-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/RenterUpgrades/WithBaseLatestRelease

# Long hosts upgrade tests v1.4.7 to v 1.5.0
hosts-v147-to-v150-upgrade-tests:
  <<: *default_test_params
  <<: *long_upgrade_test_jobs_filter
  cache:
    key: long-hosts-v147-to-v150-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/HostsUpgrades/FromV147ToV150WithBaseV1411

# Long hosts upgrade tests v1.5.0 to v1.5.3
hosts-v150-to-v153-upgrade-tests:
  <<: *default_test_params
  <<: *long_upgrade_test_jobs_filter
  cache:
    key: long-hosts-v150-to-v153-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/HostsUpgrades/FromV150ToV153WithBaseV153

# Long hosts upgrade tests v1.5.3 to v1.5.4
hosts-v153-to-v154-upgrade-tests:
  <<: *default_test_params
  <<: *long_upgrade_test_jobs_filter
  cache:
    key: long-hosts-v153-to-v154-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/HostsUpgrades/FromV153ToV154WithBaseV154

# Long hosts upgrade tests v1.5.4 to master with base master
hosts-v154-to-master-base-master-upgrade-tests:
  <<: *default_test_params
  <<: *long_upgrade_test_jobs_filter
  cache:
    key: long-hosts-v154-to-master-base-master-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/HostsUpgrades/FromV154WithBaseLatestMaster

# Long hosts upgrade tests v1.5.4 to master with base release
hosts-v154-to-master-base-release-upgrade-tests:
  <<: *default_test_params
  <<: *long_upgrade_test_jobs_filter
  cache:
    key: long-hosts-v154-to-master-base-release-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/HostsUpgrades/FromV154WithBaseLatestRelease

# Long renter upgrade tests
renter-upgrade-tests:
  <<: *default_test_params
  <<: *long_upgrade_test_jobs_filter
  cache:
    key: long-renter-release-upgrade-tests-cache
    paths:
      - .cache
  script:
    - make test-vlong pkgs="$version_test_pkgs" run=TestUpgrades/RenterUpgrades
